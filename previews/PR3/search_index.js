var documenterSearchIndex = {"docs":
[{"location":"release_notes/#Release-Notes","page":"Release Notes","title":"Release Notes","text":"","category":"section"},{"location":"release_notes/#Current-Development","page":"Release Notes","title":"Current Development","text":"","category":"section"},{"location":"release_notes/","page":"Release Notes","title":"Release Notes","text":"Current development includes:","category":"page"},{"location":"release_notes/","page":"Release Notes","title":"Release Notes","text":"Initial tensor product basis conversion","category":"page"},{"location":"public/#Public-API","page":"Public API","title":"Public API","text":"","category":"section"},{"location":"public/","page":"Public API","title":"Public API","text":"This section documents the public API of the LibCEED2LFAToolkit.","category":"page"},{"location":"public/#Contents","page":"Public API","title":"Contents","text":"","category":"section"},{"location":"public/#Basis","page":"Public API","title":"Basis","text":"","category":"section"},{"location":"public/","page":"Public API","title":"Public API","text":"converttensorbasis","category":"page"},{"location":"public/#LibCEED2LFAToolkit.converttensorbasis","page":"Public API","title":"LibCEED2LFAToolkit.converttensorbasis","text":"converttensorbasis(ceedbasis)\n\nConvert a tensor product basis\n\nNote: LibCEED.jl does not store or provide an accessor for nodes. This function passes in an array of numnodes1d linearly spaced nodes between [-1.0, 1.0]. It is known that LFA is independent of the placement of the degrees of freedom; however it is not clear to me that it necessarily follows that arbitrary nodal locations can be used in the LFA regardless of the nodal locations used in the assembly of the element matrix.\n\nArguments:\n\nceedbasis:  LibCEED.jl tensor product Basis object\n\nReturns:\n\nLFAToolkit.jl tensor product basis object\n\nExample:\n\nusing LibCEED, LFAToolkit\n\n# libCEED objects\nceed = LibCEED.Ceed(\"/cpu/self\")\nceedbasis = LibCEED.create_tensor_h1_lagrange_basis(ceed, 2, 3, 4, 5, LibCEED.GAUSS)\n\n# convert\nlfabasis = converttensorbasis(ceedbasis)\nprintln(lfabasis)\n\n# output\n\ntensor product basis:\n    numbernodes1d: 4\n    numberquadraturepoints1d: 5\n    numbercomponents: 3\n    dimension: 2\n\n\n\n\n\n\n","category":"function"},{"location":"#LibCeed2LFAToolkit","page":"Introduction","title":"LibCeed2LFAToolkit","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Convert libCEED.jl objects into LFAToolkit objects","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package provides utilities for converting libCEED.jl objects into LFAToolkit.jl objects to facilitate easier analysis of libCEED.jl operators.","category":"page"},{"location":"#Contents","page":"Introduction","title":"Contents","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Pages = [\n    \"public.md\",\n    \"release_notes.md\"\n]\nDepth = 1","category":"page"}]
}
